{"config":{"output_file":null,"full_docs":false,"pub_only":false,"reachable_only":false,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/chompk/WORK/others/solana/solana-hack-contract","program":"/Users/chompk/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":[],"output":"/Users/chompk/WORK/others/solana/solana-hack-contract/target/rls/debug/deps/libanchor_derive_accounts-690ecf3c51a87be6.dylib"},"prelude":{"crate_id":{"name":"anchor_derive_accounts","disambiguator":[14699579468689611551,15253181216801267870]},"crate_root":"lang/derive/accounts/src","external_crates":[{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11266178634318078844,10430434914575217037]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11698766721189094488,12060600386163665861]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7682173449702177568,11032960836976215208]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4743338922599007115,7423637119316760057]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2427264904945132901,10184032034968735412]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9774951351864599068,14817832832842499961]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10809433593918525561,458952361993985826]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15028772050842969220,14160812736163645060]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[6995225455969351707,4449664983666090491]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8140348155906305511,16205222570971502248]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[233178625001733801,10631967199943834554]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[1525994598401419908,3288373240607898362]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[6171023582747105604,8380219937402072808]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16379221974889702373,16836676840445794723]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":15,"id":{"name":"panic_unwind","disambiguator":[17037182358159064978,13693302728723089691]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":16,"id":{"name":"proc_macro","disambiguator":[6358763583554621659,15775114518040962386]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":17,"id":{"name":"quote","disambiguator":[16536675839274066247,6098762713422147077]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":18,"id":{"name":"proc_macro2","disambiguator":[4085524845033534183,8087926995391337720]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":19,"id":{"name":"unicode_xid","disambiguator":[772564931576523347,4607949672505612769]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":20,"id":{"name":"syn","disambiguator":[10942902419280354587,9750703270003033712]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":21,"id":{"name":"anchor_syn","disambiguator":[14132263106737239090,12270151458111815884]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":22,"id":{"name":"heck","disambiguator":[7335897173615012181,6431184413639280511]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":23,"id":{"name":"unicode_segmentation","disambiguator":[3789194999840654336,4065987452331357348]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":24,"id":{"name":"serde","disambiguator":[17135675976230624755,589632660433765169]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":25,"id":{"name":"serde_derive","disambiguator":[694746219419471671,3790248007922541675]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":26,"id":{"name":"sha2","disambiguator":[6153045250133178519,14822849058467187167]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":27,"id":{"name":"block_buffer","disambiguator":[7602911465880367864,10174115670722655941]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":28,"id":{"name":"generic_array","disambiguator":[10317130866137342843,9549622249983538291]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":29,"id":{"name":"typenum","disambiguator":[14848221274473902360,5496768645271541822]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":30,"id":{"name":"block_padding","disambiguator":[11136023732013779189,7320403370709760995]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":31,"id":{"name":"digest","disambiguator":[7161467055939299654,3347268441795638296]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":32,"id":{"name":"opaque_debug","disambiguator":[1278970924995052426,10516570868823248377]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":33,"id":{"name":"cfg_if","disambiguator":[14470576390289463931,3664011194522102962]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":34,"id":{"name":"cpufeatures","disambiguator":[11623656504026246433,4944566793079689373]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":35,"id":{"name":"thiserror","disambiguator":[17412565122212040025,2877520169699101642]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":36,"id":{"name":"thiserror_impl","disambiguator":[13832706990874794734,4410108143688277976]}},{"file_name":"/Users/chompk/WORK/others/solana/solana-hack-contract/lang/derive/accounts/src/lib.rs","num":37,"id":{"name":"bs58","disambiguator":[18065045107655832753,16672373205484200849]}}],"span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":0,"byte_end":4333,"line_start":1,"line_end":60,"column_start":1,"column_end":2}},"imports":[{"kind":"ExternCrate","ref_id":null,"span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":13,"byte_end":23,"line_start":1,"line_end":1,"column_start":14,"column_end":24},"alias_span":null,"name":"proc_macro","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":16,"index":3217},"span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":42,"byte_end":53,"line_start":3,"line_end":3,"column_start":17,"column_end":28},"alias_span":null,"name":"TokenStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":117},"span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":66,"byte_end":74,"line_start":4,"line_end":4,"column_start":12,"column_end":20},"alias_span":null,"name":"ToTokens","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3588},"span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":85,"byte_end":102,"line_start":5,"line_end":5,"column_start":10,"column_end":27},"alias_span":null,"name":"parse_macro_input","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":3589},"span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":85,"byte_end":102,"line_start":5,"line_end":5,"column_start":10,"column_end":27},"alias_span":null,"name":"parse_macro_input","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":0,"byte_end":4333,"line_start":1,"line_end":60,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"lang/derive/accounts/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":13},{"krate":0,"index":14}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Local","id":{"krate":0,"index":1073741837},"span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":4194,"byte_end":4198,"line_start":56,"line_end":56,"column_start":34,"column_end":38},"name":"item","qualname":"::derive_anchor_deserialize::item","value":"proc_macro::TokenStream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":13},"span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":4168,"byte_end":4193,"line_start":56,"line_end":56,"column_start":8,"column_end":33},"name":"derive_anchor_deserialize","qualname":"::derive_anchor_deserialize","value":"pub fn derive_anchor_deserialize(TokenStream) -> TokenStream","parent":null,"children":[],"decl_id":null,"docs":" Implements an [`Accounts`](./trait.Accounts.html) deserializer on the given\n struct, applying any constraints specified via inert `#[account(..)]`\n attributes upon deserialization.","sig":null,"attributes":[{"value":"/ Implements an [`Accounts`](./trait.Accounts.html) deserializer on the given","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":105,"byte_end":184,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ struct, applying any constraints specified via inert `#[account(..)]`","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":185,"byte_end":258,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"/ attributes upon deserialization.","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":259,"byte_end":295,"line_start":9,"line_end":9,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":296,"byte_end":299,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":300,"byte_end":313,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":314,"byte_end":317,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":318,"byte_end":331,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/ #[derive(Accounts)]","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":332,"byte_end":355,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/ pub struct Auth<'info> {","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":356,"byte_end":384,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/     #[account(mut, has_one = authority)]","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":385,"byte_end":429,"line_start":16,"line_end":16,"column_start":1,"column_end":45}},{"value":"/     pub data: ProgramAccount<'info, MyData>,","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":430,"byte_end":478,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"/     #[account(signer)]","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":479,"byte_end":505,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/     pub authority: AccountInfo<'info>,","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":506,"byte_end":548,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":549,"byte_end":554,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":555,"byte_end":558,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ #[account]","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":559,"byte_end":573,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/ pub struct MyData {","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":574,"byte_end":597,"line_start":23,"line_end":23,"column_start":1,"column_end":24}},{"value":"/   authority: Pubkey,","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":598,"byte_end":622,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/   protected_data: u64,","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":623,"byte_end":649,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":650,"byte_end":655,"line_start":26,"line_end":26,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":656,"byte_end":663,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":664,"byte_end":667,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Here, any instance of the `Auth` struct created via","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":668,"byte_end":723,"line_start":29,"line_end":29,"column_start":1,"column_end":56}},{"value":"/ [`try_accounts`](trait.Accounts.html#tymethod.try_accounts) is guaranteed","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":724,"byte_end":801,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ to have been both","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":802,"byte_end":823,"line_start":31,"line_end":31,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":824,"byte_end":827,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ * Signed by `authority`.","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":828,"byte_end":856,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ * Checked that `&data.authority == authority.key`.","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":857,"byte_end":911,"line_start":34,"line_end":34,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":912,"byte_end":915,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The full list of available attributes is as follows.","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":916,"byte_end":972,"line_start":36,"line_end":36,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":973,"byte_end":976,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ | Attribute | Location | Description |","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":977,"byte_end":1019,"line_start":38,"line_end":38,"column_start":1,"column_end":43}},{"value":"/ |:--|:--|:--|","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":1020,"byte_end":1037,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/ | `#[account(signer)]` | On raw `AccountInfo` structs. | Checks the given account signed the transaction. |","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":1038,"byte_end":1149,"line_start":40,"line_end":40,"column_start":1,"column_end":112}},{"value":"/ | `#[account(mut)]` | On `AccountInfo`, `ProgramAccount` or `CpiAccount` structs. | Marks the account as mutable and persists the state transition. |","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":1150,"byte_end":1303,"line_start":41,"line_end":41,"column_start":1,"column_end":154}},{"value":"/ | `#[account(init)]` | On `ProgramAccount` structs. | Marks the account as being initialized, skipping the account discriminator check. When using `init`, a `rent` `Sysvar` must be present in the `Accounts` struct. |","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":1304,"byte_end":1524,"line_start":42,"line_end":42,"column_start":1,"column_end":221}},{"value":"/ | `#[account(belongs_to = <target>)]` | On `ProgramAccount` or `CpiAccount` structs | Checks the `target` field on the account matches the `target` field in the struct deriving `Accounts`. |","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":1525,"byte_end":1719,"line_start":43,"line_end":43,"column_start":1,"column_end":195}},{"value":"/ | `#[account(has_one = <target>)]` | On `ProgramAccount` or `CpiAccount` structs | Semantically different, but otherwise the same as `belongs_to`. |","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":1720,"byte_end":1872,"line_start":44,"line_end":44,"column_start":1,"column_end":153}},{"value":"/ | `#[account(seeds = [<seeds>])]` | On `AccountInfo` structs | Seeds for the program derived address an `AccountInfo` struct represents. |","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":1873,"byte_end":2015,"line_start":45,"line_end":45,"column_start":1,"column_end":143}},{"value":"/ | `#[account(constraint = <expression>)]` | On any type deriving `Accounts` | Executes the given code as a constraint. The expression should evaluate to a boolean. |","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":2016,"byte_end":2185,"line_start":46,"line_end":46,"column_start":1,"column_end":170}},{"value":"/ | `#[account(\"<literal>\")]` | Deprecated | Executes the given code literal as a constraint. The literal should evaluate to a boolean. |","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":2186,"byte_end":2325,"line_start":47,"line_end":47,"column_start":1,"column_end":140}},{"value":"/ | `#[account(rent_exempt = <skip>)]` | On `AccountInfo` or `ProgramAccount` structs | Optional attribute to skip the rent exemption check. By default, all accounts marked with `#[account(init)]` will be rent exempt, and so this should rarely (if ever) be used. Similarly, omitting `= skip` will mark the account rent exempt. |","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":2326,"byte_end":2656,"line_start":48,"line_end":48,"column_start":1,"column_end":331}},{"value":"/ | `#[account(executable)]` | On `AccountInfo` structs | Checks the given account is an executable program. |","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":2657,"byte_end":2769,"line_start":49,"line_end":49,"column_start":1,"column_end":113}},{"value":"/ | `#[account(state = <target>)]` | On `CpiState` structs | Checks the given state is the canonical state account for the target program. |","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":2770,"byte_end":2912,"line_start":50,"line_end":50,"column_start":1,"column_end":143}},{"value":"/ | `#[account(owner = <target>)]` | On `CpiState`, `CpiAccount`, and `AccountInfo` | Checks the account owner matches the target. |","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":2913,"byte_end":3047,"line_start":51,"line_end":51,"column_start":1,"column_end":135}},{"value":"/ | `#[account(associated = <target>, with? = <target>, payer? = <target>, space? = \"<literal>\")]` | On `ProgramAccount` | Whe `init` is provided, creates an associated program account at a program derived address. `associated` is the SOL address to create the account for. `with` is an optional association, for example, a `Mint` account in the SPL token program. `payer` is an optional account to pay for the account creation, defaulting to the `associated` target if none is given. `space` is an optional literal specifying how large the account is, defaulting to the account's serialized `Default::default` size (+ 8 for the account discriminator) if none is given. When creating an associated account, a `rent` `Sysvar` and `system_program` `AccountInfo` must be present in the `Accounts` struct. When `init` is not provided, then ensures the given associated account has the expected address, defined by the program and the given seeds. |","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":3048,"byte_end":3994,"line_start":52,"line_end":52,"column_start":1,"column_end":947}},{"value":"proc_macro_derive(Accounts, attributes(account))","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":4109,"byte_end":4160,"line_start":55,"line_end":55,"column_start":1,"column_end":52}}]}],"impls":[],"refs":[{"kind":"Mod","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":30,"byte_end":40,"line_start":3,"line_end":3,"column_start":5,"column_end":15},"ref_id":{"krate":16,"index":0}},{"kind":"Mod","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":59,"byte_end":64,"line_start":4,"line_end":4,"column_start":5,"column_end":10},"ref_id":{"krate":17,"index":0}},{"kind":"Mod","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":80,"byte_end":83,"line_start":5,"line_end":5,"column_start":5,"column_end":8},"ref_id":{"krate":20,"index":0}},{"kind":"Type","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":4200,"byte_end":4211,"line_start":56,"line_end":56,"column_start":40,"column_end":51},"ref_id":{"krate":16,"index":3217}},{"kind":"Type","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":4216,"byte_end":4227,"line_start":56,"line_end":56,"column_start":56,"column_end":67},"ref_id":{"krate":16,"index":3217}},{"kind":"Function","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":4325,"byte_end":4329,"line_start":59,"line_end":59,"column_start":10,"column_end":14},"ref_id":{"krate":2,"index":2727}},{"kind":"Function","span":{"file_name":"lang/derive/accounts/src/lib.rs","byte_start":4298,"byte_end":4313,"line_start":58,"line_end":58,"column_start":10,"column_end":25},"ref_id":{"krate":17,"index":119}}],"macro_refs":[],"relations":[]}